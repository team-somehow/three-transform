from flask import Flask, jsonify, request
from flask_cors import CORS
from openai import OpenAI
import shutil
import os
import random
from subprocess import run
import subprocess
from lighthouseweb3 import Lighthouse
from web3 import Web3
from solcx import compile_source
import json
lighthouseKeys='189af0ba.4f431b7ecc314f4ea25273a574b88111'
lh = Lighthouse(token=lighthouseKeys)
def uploadFile(address):
    upload = lh.upload(source=address)
    return upload

gpt_api_key=os.environ.get("OPENAI_API_KEY")
lighthouseKeys=os.environ.get("LIGHTHOUSE")
app = Flask(__name__,static_url_path='/static/', static_folder='static/')
CORS(app)

@app.route('/',methods=['GET','POST'])
def hardhatCompiler():
    data=request.get_json()
    if data.get('is_test',None)==True:
        return jsonify(test_reponse)

    name=f"setup-{random.randint(1,100000)}"

    run(['bash','script2.sh',name])

    with open(f"{name}/contracts/{data['contractName']}.sol", 'w+') as sol_file:
        sol_file.write(data['code'])
    with open(f"{name}/test/{data['contractName']}.js", 'w+') as sol_file:
        sol_file.write(data['testing'])
    run(['bash','script.sh',name])
    shutil.make_archive(f'static/{name}','zip',name)
    Hardhat=uploadFile(f'./static/{name}.zip')
    shutil.make_archive(f'static/{name}/artifacts','zip',f"{name}/artifacts")
    ABI=uploadFile(f'./static/{name}/artifacts.zip')
    abi=""
    with open(f"{name}/artifacts/contracts/{data['contractName']}.sol/{data['contractName']}.json","r") as sol_file:
        abi=sol_file.read()
    return jsonify({"HardHat":f"https://gateway.lighthouse.storage/ipfs/{Hardhat['data']['Hash']}","ABI_URI":f"https://gateway.lighthouse.storage/ipfs/{ABI['data']['Hash']}","ABI":json.loads(abi)})


@app.route('/hardhatDeploy',methods=['GET','POST'])
def hardhatDeploy():
    name=f"setup-{random.randint(1,100000)}"

    run(['bash','script2.sh',name])
    data=request.get_json()
    data=request.get_json()

    file_path = f"{name}/contracts/{data['contractName']}.sol"
    os.makedirs(os.path.dirname(file_path), exist_ok=True)
    with open(file_path, 'w+') as sol_file:
        sol_file.write(data['code'])
    deployText='''const hre = require("hardhat");
        async function main() {
        const con = await hre.ethers.deployContract("'''+data['contractName']+'''",[],{});
        await con.waitForDeployment();
        console.log("Address: ",con.target);
        }
        main().catch((error) => {
        console.error(error);
        process.exitCode = 1;
        });
    
    '''
    with open(f"{name}/scripts/deploy.js", 'w+') as sol_file:
        sol_file.write(deployText)

    result=run(['bash','deployscript.sh',name],stdout=subprocess.PIPE)
    print(result.stdout.strip().decode('utf-8').split("Address:  "))
    contractAddress=result.stdout.strip().decode('utf-8').split("Address:  ")[1]
    return jsonify({"Contract Address":contractAddress})

@app.route('/getABI',methods=['GET',"POST"])
def getABI():
    name=f"setup-{random.randint(1,100000)}"
    run(['bash','script2.sh',name])
    data=request.get_json()
    with open(f"{name}/contracts/{data['contractName']}.sol", 'w+') as sol_file:
        sol_file.write(data['code'])
    run(['bash','script.sh',name])
    shutil.make_archive(f'static/{name}/artifacts','zip',f"{name}/artifacts")
    print("Zip file made")
    upload=uploadFile(f'./static/{name}/artifacts.zip')
    return jsonify({"filename":f"/static/{name}/artifacts.zip","CID":upload['data']['Hash']})




if __name__=="__main__":
    uploadFile('artifiacts.zip','/setup-32744/artifacts.zip')
    app.run(host='127.0.0.1',port=5002)


test_reponse={
    "ABI": {
      "_format": "hh-sol-artifact-1",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            }
          ],
          "name": "downvote",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "downvotes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            }
          ],
          "name": "getPostScore",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "score",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferTo",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            }
          ],
          "name": "upvote",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "upvotes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109c4806100606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5b1f44d1161005b578063a5b1f44d14610127578063e5af18c514610143578063f1c1921514610173578063faa5fd03146101a357610088565b80633faab61e1461008d57806365231328146100bd5780638da5cb5b146100ed578063a03fa7e31461010b575b600080fd5b6100a760048036038101906100a291906105e7565b6101bf565b6040516100b4919061062d565b60405180910390f35b6100d760048036038101906100d291906106a6565b6101dc565b6040516100e49190610701565b60405180910390f35b6100f561020b565b604051610102919061072b565b60405180910390f35b61012560048036038101906101209190610746565b61022f565b005b610141600480360381019061013c91906105e7565b610300565b005b61015d600480360381019061015891906105e7565b610432565b60405161016a919061062d565b60405180910390f35b61018d600480360381019061018891906106a6565b61044a565b60405161019a9190610701565b60405180910390f35b6101bd60048036038101906101b891906105e7565b610479565b005b600060036000838152602001908152602001600020549050919050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b4906107f6565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff161561039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610862565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000828152602001908152602001600020600081548092919061042a906108b1565b919050555050565b60036020528060005260406000206000915090505481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610945565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600082815260200190815260200160002060008154809291906105a490610965565b919050555050565b600080fd5b6000819050919050565b6105c4816105b1565b81146105cf57600080fd5b50565b6000813590506105e1816105bb565b92915050565b6000602082840312156105fd576105fc6105ac565b5b600061060b848285016105d2565b91505092915050565b6000819050919050565b61062781610614565b82525050565b6000602082019050610642600083018461061e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067382610648565b9050919050565b61068381610668565b811461068e57600080fd5b50565b6000813590506106a08161067a565b92915050565b600080604083850312156106bd576106bc6105ac565b5b60006106cb85828601610691565b92505060206106dc858286016105d2565b9150509250929050565b60008115159050919050565b6106fb816106e6565b82525050565b600060208201905061071660008301846106f2565b92915050565b61072581610668565b82525050565b6000602082019050610740600083018461071c565b92915050565b60006020828403121561075c5761075b6105ac565b5b600061076a84828501610691565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b60006107e0602283610773565b91506107eb82610784565b604082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f43616e6e6f74207570766f7465206120646f776e766f74656420706f73742e00600082015250565b600061084c601f83610773565b915061085782610816565b602082019050919050565b6000602082019050818103600083015261087b8161083f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108bc82610614565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108ee576108ed610882565b5b600182019050919050565b7f43616e6e6f7420646f776e766f746520616e207570766f74656420706f73742e600082015250565b600061092f602083610773565b915061093a826108f9565b602082019050919050565b6000602082019050818103600083015261095e81610922565b9050919050565b600061097082610614565b91506000820361098357610982610882565b5b60018203905091905056fea264697066735822122077b1bf02ba306160f8480adfce6cf4ced37f10e44b6ceae4a3117e2fb454b21d64736f6c63430008110033",
      "contractName": "RedditVoting",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5b1f44d1161005b578063a5b1f44d14610127578063e5af18c514610143578063f1c1921514610173578063faa5fd03146101a357610088565b80633faab61e1461008d57806365231328146100bd5780638da5cb5b146100ed578063a03fa7e31461010b575b600080fd5b6100a760048036038101906100a291906105e7565b6101bf565b6040516100b4919061062d565b60405180910390f35b6100d760048036038101906100d291906106a6565b6101dc565b6040516100e49190610701565b60405180910390f35b6100f561020b565b604051610102919061072b565b60405180910390f35b61012560048036038101906101209190610746565b61022f565b005b610141600480360381019061013c91906105e7565b610300565b005b61015d600480360381019061015891906105e7565b610432565b60405161016a919061062d565b60405180910390f35b61018d600480360381019061018891906106a6565b61044a565b60405161019a9190610701565b60405180910390f35b6101bd60048036038101906101b891906105e7565b610479565b005b600060036000838152602001908152602001600020549050919050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b4906107f6565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff161561039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610862565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000828152602001908152602001600020600081548092919061042a906108b1565b919050555050565b60036020528060005260406000206000915090505481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610945565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600082815260200190815260200160002060008154809291906105a490610965565b919050555050565b600080fd5b6000819050919050565b6105c4816105b1565b81146105cf57600080fd5b50565b6000813590506105e1816105bb565b92915050565b6000602082840312156105fd576105fc6105ac565b5b600061060b848285016105d2565b91505092915050565b6000819050919050565b61062781610614565b82525050565b6000602082019050610642600083018461061e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067382610648565b9050919050565b61068381610668565b811461068e57600080fd5b50565b6000813590506106a08161067a565b92915050565b600080604083850312156106bd576106bc6105ac565b5b60006106cb85828601610691565b92505060206106dc858286016105d2565b9150509250929050565b60008115159050919050565b6106fb816106e6565b82525050565b600060208201905061071660008301846106f2565b92915050565b61072581610668565b82525050565b6000602082019050610740600083018461071c565b92915050565b60006020828403121561075c5761075b6105ac565b5b600061076a84828501610691565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b60006107e0602283610773565b91506107eb82610784565b604082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f43616e6e6f74207570766f7465206120646f776e766f74656420706f73742e00600082015250565b600061084c601f83610773565b915061085782610816565b602082019050919050565b6000602082019050818103600083015261087b8161083f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108bc82610614565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108ee576108ed610882565b5b600182019050919050565b7f43616e6e6f7420646f776e766f746520616e207570766f74656420706f73742e600082015250565b600061092f602083610773565b915061093a826108f9565b602082019050919050565b6000602082019050818103600083015261095e81610922565b9050919050565b600061097082610614565b91506000820361098357610982610882565b5b60018203905091905056fea264697066735822122077b1bf02ba306160f8480adfce6cf4ced37f10e44b6ceae4a3117e2fb454b21d64736f6c63430008110033",
      "deployedLinkReferences": {},
      "linkReferences": {},
      "sourceName": "contracts/RedditVoting.sol"
    },
    "ABI_URI": "https://gateway.lighthouse.storage/ipfs/QmaF7jTr2DzqRxF85PdhTHZN6wFYXJhcAo2BpkYpRnH47Q",
    "HardHat": "https://gateway.lighthouse.storage/ipfs/QmWZsdB6x927g5SR8fR6kWXeuo4rUBoGMKtPURfHZfUwz8"
  }